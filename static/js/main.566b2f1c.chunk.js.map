{"version":3,"sources":["firebase.js","components/login.js","components/Room.js","components/ambulatori.js","App.js","reportWebVitals.js","index.js"],"names":["dotenv","config","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","Login","_ref","setUserRole","setUserName","email","setEmail","useState","password","setPassword","error","setError","React","createElement","className","type","placeholder","value","onChange","e","target","onClick","async","user","signInWithEmailAndPassword","userDocRef","doc","uid","userDoc","getDoc","exists","userData","data","userRole","role","userName","displayName","console","Room","roomName","startDate","endDate","isOpen","setIsOpen","selectedCategory","setSelectedCategory","inputData","setInputData","savedData","setSavedData","viewOption","setViewOption","isSubmitting","setIsSubmitting","viewCategory","setViewCategory","comments","setComments","newComment","setNewComment","isLoadingData","setIsLoadingData","importantNotes","setImportantNotes","newImportantNote","setNewImportantNote","importantDates","setImportantDates","categories","name","options","useEffect","currentUser","userRef","fetchUserRoleAndName","fetchSavedData","roomRef","collections","aggregatedData","category","categoryRef","collection","getDocs","forEach","docData","docDate","date","addedBy","categoryData","option","push","handleViewCategoryClick","concat","toLowerCase","querySnapshot","fetchedComments","commentData","commentDate","Date","timestamp","toISOString","split","_objectSpread","id","sort","a","b","fetchImportantNotes","notesRef","fetchedNotes","noteData","noteDate","style","backgroundColor","color","padding","border","borderRadius","fontSize","fontWeight","cursor","log","Object","keys","length","alert","workbook","XLSX","book_new","worksheetData","start","diffInTime","getTime","diffInDays","Math","ceil","dateRange","Array","from","_","i","nextDate","setDate","getDate","row","map","_savedData$category$n","_savedData$category$n2","matchingData","find","entry","regularTotal","slice","reduce","sum","includes","beforeHash","parseInt","hashTotal","afterHash","worksheet","aoa_to_sheet","currentRow","rowSpan","s","r","c","book_append_sheet","idx","key","comment","text","toLocaleString","trim","addDoc","note","existingData","assign","handleCategoryClick","handleInputChange","test","disabled","inputDataProcessed","acc","Error","numValue","isNaN","existingDocId","docRef","updateDoc","message","isGeneralVisible","setIsGeneralVisible","isOption1Visible","setIsOption1Visible","isOption2Visible","setIsOption2Visible","isOption3Visible","setIsOption3Visible","savedData_tsahilgaan","setSavedData_tsahilgaan","savedData_illeg","setSavedData_illeg","savedData_usan","setSavedData_usan","categories_tsahilgaan","categories_illeg","categories_usan","categoryMapping","fetchSavedData_illeg","fetchSavedData_usan","fetchSavedData_tsahilgaan","handleSubmit","inputDataAsStrings","handleAddComment","total","budgetTotal","match","toString","_savedData_tsahilgaan","_savedData_tsahilgaan2","_savedData_illeg$cate","_savedData_illeg$cate2","_savedData_usan$categ","_savedData_usan$categ2","App","formatDate","getTodayDate","setStartDate","setEndDate","filterKey","setFilterKey","applyFilter","prevKey","logout","setToday","today","setYesterday","yesterday","formattedDate","setLastWeek","lastWeekStart","Ambulatori","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.566b2f1c.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY ,\n  authDomain:  process.env.REACT_APP_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_PROJECTID,\n  storageBucket:process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENTID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\nexport { db, auth };","import React, { useState } from \"react\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase\"; // Adjust the path based on your setup\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\";\nimport './login.css'; // Importing CSS file\n\nconst db = getFirestore();\n\nconst Login = ({ setUserRole, setUserName }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null); // Added state for error handling\n\n  const handleLogin = async () => {\n    try {\n      // First, sign in the user\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Fetch the user document from Firestore based on user UID\n      const userDocRef = doc(db, \"users\", user.uid);\n      const userDoc = await getDoc(userDocRef);\n\n      if (userDoc.exists()) {\n        const userData = userDoc.data();\n        const userRole = userData.role;\n        const userName = userData.displayName;\n\n        if (userRole) {\n          setUserRole(userRole); // Set the role if it exists\n        } else {\n          setError(\"No role assigned to this user.\"); // Set error message\n          return;\n        }\n\n        if (userName) {\n          setUserName(userName); // Set the username (displayName) if it exists\n        } else {\n          setError(\"No username assigned to this user.\"); // Set error message\n          return;\n        }\n      } else {\n        setError(\"User document not found.\"); // Set error message\n        return;\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      setError(\"Login failed. Check your credentials.\"); // Set error message\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-box\">\n        <h2>Нэвтрэх</h2>\n        {error && <div className=\"error\">{error}</div>} {/* Display error if there is any */}\n        <input\n          type=\"email\"\n          placeholder=\"Имэйл хаяг\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className=\"input-field\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Нууц үг\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"input-field\"\n        />\n        <button onClick={handleLogin} className=\"login-btn\">Нэвтрэх</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Room.css\";\nimport { db } from \"../firebase\";\nimport { collection, addDoc, doc, getDocs, getDoc, updateDoc } from \"firebase/firestore\";\nimport { auth } from \"../firebase\";\nimport * as XLSX from \"xlsx\";\n\nconst Room = ({ roomName, startDate, endDate }) => {\n  const [isOpen, setIsOpen] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [inputData, setInputData] = useState({});\n  const [savedData, setSavedData] = useState({});\n  const [viewOption, setViewOption] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [userName, setUserName] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [viewCategory, setViewCategory] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [isLoadingData, setIsLoadingData] = useState(false);\n  const [importantNotes, setImportantNotes] = useState([]);\n  const [newImportantNote, setNewImportantNote] = useState(\"\");\n  const [importantDates, setImportantDates] = useState([]);\n\n\n  const categories = [\n    { name: \"Тарилга\", options: [\"Cудас\", \"Дусал\", \"Булчин\", \"Арьсан дор\", \"Арьсан дотор\"] },\n    { name: \"Гардан ажилбар\", options: [\"Амин үзүүлэлт\", \"Антибиотик/тариагаар/\", \"Антибиотик/уухаар/\", \"Уян зүү\", \"Яаралтай тусламж (O2)\", \"Нүдэнд эм дусаах\", \"Нүдэнд тос хавчуулах\", \"Хамар цэвэрлэх, угаах\", \"Хамарт эм дусаах\", \"Чих цэвэрлэх, угаах\", \"Чихэнд эм дусаах\", \"Утлага хийх\", \"Клизм тавих\", \"Шулуун гэдсэнд лаа хийх\", \"Биеийн жин үзэж тэмдэглэх\", \"Шарх цэвэрлэх\", \"Боолт хийх\", \"Гардан хооллосон хүүхэд\", \"Эм гардан уулгасан\", \"Толгойд тос түрхэх\"] },\n    { name: \"АШББ хөтлөх\", options: [\"Эмийн түүвэр хийх\", \"Стори бодох\", \"Сувилгааны түүх хөтлөх\"] },\n    { name: \"Шинжилгээ\", options: [\"Биохими\", \"Цусны ерөнхий\", \"ЦЕШ\", \"ШЕШ\", \"Цагаан хорхой\", \"Рентген\", \"ЭХО\", \"Нарийн мэргэжлийн эмчийн үзлэг\"] },\n    { name: \"Асаргаа, сувилагаа\", options: [\"Усанд оруулах\", \"Ор засаж, цэвэрлэх\", \"Цагаан хэрэглэл солих\", \"Хэсэгчилсэн угаалга хийх (гар, хөл, шүд, ам)\"] },\n    { name: \"ДХ\", options: [\"Хөдөлгөөн засал\", \"Хөдөлмөр засал\", \"Хэл засал\"] },\n    { name: \"Бусад ажил\", options: [\"Эмийн сангаас эм авах\", \"Эмчилгээ тараах\", \"Эмчлүүлэгч нарт зөвлөгөө өгөх, хяналт тавих\", \"Агаарт гаргасан\", \"Ариутгал цэвэрлэгээ хийсэн\", \"ЭМБО олгосон үйлчлүүлэгчийн тоо\", \"Дотоод журам танилцуулах\", \"Халдвартай хог хаягдал\", \"Аюулгүй хайрцаг\", \"Квартз\"] },\n  ];\n\n  const categoryMapping = {\n    \"Тарилга\": \"Тарилга\",\n    \"Гардан ажилбар\": \"Aмин үзүүлэлт\",\n    \"АШББ хөтлөх\": \"Гардан ажилбар\",\n    \"Шинжилгээ\": \"Шинжилгээ\",\n    \"Асаргаа, сувилагаа\": \"Асаргаа, Сувилгаа\",\n    \"ДХ\": \"Д/Х\",\n    \"Бусад ажил\": \"Биеийн жин\",\n  };\n  \n\n  const fetchUserRoleAndName = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        const userRef = doc(db, \"users\", user.uid);\n        const userDoc = await getDoc(userRef);\n\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          setUserRole(userData.role);\n          setUserName(userData.displayName);\n        } else {\n          console.error(\"User document does not exist.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching user role and name: \", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserRoleAndName();\n  }, []);\n\n  const fetchSavedData = async () => {\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const collections = [\n        \"тарилга\",\n        \"гардан ажилбар\",\n        \"ашбб хөтлөх\",\n        \"шинжилгээ\",\n        \"асаргаа, сувилагаа\",\n        \"дх\",\n        \"бусад ажил\",\n      ];\n\n      let aggregatedData = {};\n\n      for (const category of collections) {\n        const categoryRef = collection(roomRef, category);\n        const querySnapshot = await getDocs(categoryRef);\n\n        querySnapshot.forEach((doc) => {\n          const docData = doc.data();\n          const docDate = docData.date;\n          const addedBy = docData.addedBy;\n\n          if (docDate >= startDate && docDate <= endDate) {\n            if (!aggregatedData[category]) {\n              aggregatedData[category] = {};\n            }\n\n            const categoryData = docData.data || {};\n            for (const option in categoryData) {\n              if (!aggregatedData[category][option]) {\n                aggregatedData[category][option] = [];\n              }\n\n              aggregatedData[category][option].push({\n                date: docDate,\n                value: categoryData[option],\n                addedBy,\n              });\n            }\n          }\n        });\n      }\n\n      setSavedData(aggregatedData);\n    } catch (error) {\n      console.error(\"Өгөгдлийг татахад алдаа гарлаа: \", error);\n    }\n  };\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      fetchSavedData();\n    }\n  }, [startDate, endDate, roomName]);\n\n\n\n  const handleExportToExcel = async () => {\n    if (isLoadingData) {\n      console.log(\"Data is still loading. Please wait...\");\n      return;\n    }\n  \n    setIsLoadingData(true);\n  \n    try {\n      await fetchSavedData();\n  \n      if (!savedData || Object.keys(savedData).length === 0) {\n        console.log(\"No data available to export.\");\n        alert(\"Мэдээлэл авахад алдаа гарлаа, түр хүлээгээд ахин оролдоно уу.\");\n        return;\n      }\n  \n      const workbook = XLSX.utils.book_new();\n      const worksheetData = [];\n  \n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const diffInTime = end.getTime() - start.getTime();\n      const diffInDays = Math.ceil(diffInTime / (1000 * 3600 * 24)) + 1;\n  \n      const dateRange = Array.from({ length: diffInDays }, (_, i) => {\n        const nextDate = new Date(start);\n        nextDate.setDate(start.getDate() + i);\n        return nextDate.toISOString().split(\"T\")[0];\n      });\n  \n      worksheetData.push([\"Ангилал\", \"Сонголт\", ...dateRange, \"Нийт Үйлчлүүлэгч\", \"Нийт Давтамж\"]); // Added new total column\n  \n      categories.forEach((category) => {\n        const options = category.options;\n  \n        options.forEach((option) => {\n          const row = [\n            category.name,\n            option,\n            ...dateRange.map((date) => {\n              const matchingData = savedData[category.name.toLowerCase()]?.[option]?.find(\n                (entry) => entry.date === date\n              );\n              return matchingData ? matchingData.value : \"\";\n            }),\n          ];\n  \n          // Calculate regular total (excluding values after #)\n          const regularTotal = row.slice(2).reduce((sum, value) => {\n            if (typeof value === 'string' && value.includes('#')) {\n              const beforeHash = value.split('#')[0];\n              return sum + (parseInt(beforeHash, 10) || 0);\n            }\n            return sum + (parseInt(value, 10) || 0);\n          }, 0);\n  \n          // Calculate total for values after #\n          const hashTotal = row.slice(2).reduce((sum, value) => {\n            if (typeof value === 'string' && value.includes('#')) {\n              const afterHash = value.split('#')[1];\n              return sum + (parseInt(afterHash, 10) || 0);\n            }\n            return sum;\n          }, 0);\n  \n          row.push(regularTotal); // Add regular total\n          row.push(hashTotal); // Add hash total\n  \n          worksheetData.push(row);\n        });\n      });\n  \n      const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\n  \n      // Merge Cells for Category Column\n      let currentRow = 1;\n      categories.forEach((category) => {\n        const options = category.options;\n        const rowSpan = options.length;\n  \n        worksheet[\"!merges\"] = worksheet[\"!merges\"] || [];\n        worksheet[\"!merges\"].push({\n          s: { r: currentRow, c: 0 },\n          e: { r: currentRow + rowSpan - 1, c: 0 },\n        });\n  \n        currentRow += rowSpan;\n      });\n  \n      XLSX.utils.book_append_sheet(workbook, worksheet, `${roomName} Data`);\n      XLSX.writeFile(workbook, `${roomName}-Data.xlsx`);\n    } catch (error) {\n      console.error(\"Error occurred while exporting data:\", error);\n      alert(\"Мэдээ татах болон экспорт хийхэд алдаа гарлаа.\");\n    } finally {\n      setIsLoadingData(false);\n    }\n  };\n  \n  \n  \n  \n\n  const handleCategoryClick = async (category) => {\n    if (userRole === \"add\") {\n      alert(\"Танд мэдээ нэмэх эрх байхгүй байна.\");\n      return;\n    }\n    setSelectedCategory(category);\n  \n    // Fetch existing data for the category and date (startDate)\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const categoryRef = collection(roomRef, category.name.toLowerCase());\n  \n      // Use the selected startDate for filtering\n      const querySnapshot = await getDocs(categoryRef);\n      const existingData = {};\n  \n      querySnapshot.forEach((doc) => {\n        const docData = doc.data();\n        if (docData.date === startDate) {\n          Object.assign(existingData, docData.data);\n        }\n      });\n  \n      setInputData(existingData); // Prepopulate input fields with fetched data\n    } catch (error) {\n      console.error(\"Одоо байгаа мэдээг татахад алдаа гарлаа:\", error);\n    }\n  };\n\nconst handleInputChange = (e, option) => {\n  const value = e.target.value;\n\n  // Allow only numbers and the \"#\" symbol\n  if (/^[0-9#]*$/.test(value)) {\n    setInputData({ ...inputData, [option]: value });\n  }\n};\n\n  \n\n\n\n\n\n\nconst handleSubmit = async () => {\n  if (isSubmitting) return;\n\n  try {\n    if (!selectedCategory) {\n      alert(\"Ангилал сонгоно уу!\");\n      return;\n    }\n\n    if (Object.keys(inputData).length === 0) {\n      alert(\"Дор хаяж нэг талбарыг бөглөнө үү!\");\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    const roomRef = doc(db, \"rooms\", roomName);\n    const categoryRef = collection(roomRef, selectedCategory.name.toLowerCase());\n\n    // Validate and process input data\n    const inputDataProcessed = Object.keys(inputData).reduce((acc, option) => {\n      const value = inputData[option];\n      \n      // If the value contains #, validate both parts\n      if (value.includes('#')) {\n        const [beforeHash, afterHash] = value.split('#');\n        \n        // Validate both parts are numbers\n        if (!/^\\d*$/.test(beforeHash) || !/^\\d*$/.test(afterHash)) {\n          throw new Error(`Invalid format for ${option}. Both parts must be numbers.`);\n        }\n        \n        acc[option] = value; // Keep the original format with #\n      } else {\n        // For regular numbers\n        const numValue = parseInt(value, 10);\n        acc[option] = isNaN(numValue) ? 0 : numValue;\n      }\n      return acc;\n    }, {});\n\n    const user = auth.currentUser;\n\n    if (!userName) {\n      alert(\"Хэрэглэгчийн нэр байхгүй байна!\");\n      setIsSubmitting(false);\n      return;\n    }\n\n    let existingDocId = null;\n    const querySnapshot = await getDocs(categoryRef);\n\n    querySnapshot.forEach((doc) => {\n      const docData = doc.data();\n      if (docData.date === startDate) {\n        existingDocId = doc.id;\n      }\n    });\n\n    if (existingDocId) {\n      const docRef = doc(categoryRef, existingDocId);\n      await updateDoc(docRef, {\n        data: inputDataProcessed,\n        addedBy: userName,\n      });\n      alert(\"Мэдээг амжилттай шинэчилсэн!\");\n    } else {\n      await addDoc(categoryRef, {\n        category: selectedCategory.name,\n        data: inputDataProcessed,\n        date: startDate,\n        addedBy: userName,\n      });\n      alert(\"Мэдээг амжилттай хадгаллаа!\");\n    }\n\n    setInputData({});\n    setSelectedCategory(null);\n    fetchSavedData();\n  } catch (error) {\n    console.error(\"Мэдээг хадгалахад алдаа гарлаа: \", error);\n    if (error.message.includes(\"Invalid format\")) {\n      alert(error.message);\n    } else {\n      alert(\"Мэдээг хадгалахад алдаа гарлаа\");\n    }\n  } finally {\n    setIsSubmitting(false);\n  }\n};\n\n\n\n\n\n\n\n\n\n  const handleViewCategoryClick = async (category) => {\n    setViewCategory(category);\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const categoryRef = collection(roomRef, `${category.name.toLowerCase()}_comments`);\n  \n      // Construct the query to filter comments based on the date range\n      const querySnapshot = await getDocs(categoryRef);\n      const fetchedComments = [];\n  \n      querySnapshot.forEach((doc) => {\n        const commentData = doc.data();\n        const commentTimestamp = new Date(commentData.timestamp);\n        const commentDate = commentTimestamp.toISOString().split(\"T\")[0]; // Get the date part\n  \n        // Check if the comment date is within the selected date range\n        if (commentDate >= startDate && commentDate <= endDate) {\n          fetchedComments.push({ id: doc.id, ...commentData });\n        }\n      });\n  \n      // Sort comments by timestamp\n      fetchedComments.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n  \n      setComments(fetchedComments);\n    } catch (error) {\n      console.error(\"Алдаа: Сэтгэгдлийг татаж чадсангүй\", error);\n    }\n  };\n  \n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n  \n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const categoryRef = collection(roomRef, `${viewCategory.name.toLowerCase()}_comments`);\n  \n      await addDoc(categoryRef, {\n        text: newComment,\n        timestamp: new Date().toISOString(),\n        addedBy: userName || \"Unknown\",\n      });\n  \n      setNewComment(\"\");\n      handleViewCategoryClick(viewCategory); // Refresh comments\n    } catch (error) {\n      console.error(\"Сэтгэгдэл нэмэхэд алдаа гарлаа: \", error);\n    }\n  };\n\nconst fetchImportantNotes = async () => {\n  try {\n    const roomRef = doc(db, \"rooms\", roomName);\n    const notesRef = collection(roomRef, \"important_notes\");\n\n    // Fetch all notes\n    const querySnapshot = await getDocs(notesRef);\n    const fetchedNotes = [];\n\n    querySnapshot.forEach((doc) => {\n      const noteData = doc.data();\n      const noteTimestamp = new Date(noteData.timestamp);\n      const noteDate = noteTimestamp.toISOString().split(\"T\")[0]; // Extract date part\n\n      // Filter based on the selected date range\n      if (noteDate >= startDate && noteDate <= endDate) {\n        fetchedNotes.push({ id: doc.id, ...noteData });\n      }\n    });\n\n    // Sort the filtered notes by timestamp\n    fetchedNotes.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n\n    setImportantNotes(fetchedNotes);\n  } catch (error) {\n    console.error(\"Error fetching important notes:\", error);\n  }\n};\n\n\n  const handleAddImportantNote = async () => {\n    if (!newImportantNote.trim()) return;\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const notesRef = collection(roomRef, \"important_notes\");\n\n      await addDoc(notesRef, {\n        text: newImportantNote,\n        timestamp: new Date().toISOString(),\n        addedBy: userName || \"Unknown\",\n      });\n\n      setNewImportantNote(\"\");\n      fetchImportantNotes(); // Refresh the notes\n    } catch (error) {\n      console.error(\"Error adding important note:\", error);\n    }\n  };\n\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchImportantNotes();\n    }\n  }, [isOpen]);\n\n\n\n\n  return (\n    <div className=\"room\">\n      <h3>{roomName}</h3>\n      {(isLoadingData || isSubmitting) && (\n            <div className=\"loading-overlay\">\n                <div className=\"spinner\"></div>\n            </div>\n        )}\n\n      {isOpen && (\n        <div className=\"popup\">\n          {userRole !== \"preview\" && (\n        <button\n          onClick={() => setViewOption(\"important\")}\n          style={{\n            backgroundColor: '#cd5f08',\n            color: 'white',\n            padding: '12px 20px',\n            border: 'none',\n            borderRadius: '5px',\n            fontSize: '1rem',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n          }}\n        >\n          Анхаарал Татсан\n        </button>\n      )}          \n          {userRole !== \"preview\" && (\n            <button onClick={() => setViewOption(\"add\")}>Сувилагчийн Тэмдэглэл</button>\n          )}\n          <button onClick={() => setViewOption(\"preview\")}>Тоон Мэдээ</button>\n          <button onClick={handleExportToExcel}>Тоон Мэдээ Татах</button>\n\n          {viewOption === \"add\" && (\n          <div className=\"view-popup\">\n            {!viewCategory && (\n              <div>\n                <h4>Ангилалаа сонгоно уу!</h4>\n                {categories.map((category, idx) => (\n                  <button key={idx} onClick={() => handleViewCategoryClick(category)}>\n                  {[\"Тарилга\", \"Амин үзүүлэлт\", \"Гардан ажилбар\", \"Шинжилгээ\", \"Асаргаа, сувилгаа\", \"Д/Х\", \"Биеийн жин, ЭМБОС, Халдвар хамгаалалт\"][idx]}\n                </button>\n                \n                ))}\n              </div>\n    )}\n\n\n{viewCategory && (\n  <div className=\"comments-container\">\n    <h4 className=\"category-title\">\n  {categoryMapping[viewCategory.name]} - Тэмдэглэгээ\n</h4>\n    \n    {/* Comments Section */}\n    <div className=\"comments\">\n      {comments.length > 0 ? (\n        comments.map((comment, idx) => (\n          <div key={idx} className=\"comment-item\">\n            <strong className=\"comment-author\">{comment.addedBy}</strong>\n            <p className=\"comment-text\">{comment.text}</p>\n            <span className=\"comment-time\">\n              {new Date(comment.timestamp).toLocaleString()}\n            </span>\n          </div>\n        ))\n      ) : (\n        <p className=\"no-comments\">Одоогоор сэтгэгдэл алга байна.</p>\n      )}\n    </div>\n\n    {/* New Comment Form */}\n    <div className=\"new-comment-form\">\n      <textarea\n        className=\"comment-input\"\n        placeholder=\"Сэтгэгдэл бичих...\"\n        value={newComment}\n        onChange={(e) => setNewComment(e.target.value)}\n      ></textarea>\n      <button\n          className=\"back-button\"\n          onClick={() => setViewCategory(null)}\n        >\n          Буцах\n        </button>\n      <div className=\"buttons\">\n        <button className=\"add-comment-button\" onClick={handleAddComment}>\n          Сэтгэгдэл нэмэх\n        </button>\n      </div>\n    </div>\n  </div>\n)}\n\n  </div>\n)}\n\n\n{viewOption === \"important\"&&userRole !== \"preview\"&& (\n  <div className=\"important-notes\">\n    <h4 className=\"important-title\">Анхаарах ёстой зүйлс</h4>\n    \n    {/* Date Filter Already Applied */}\n    <div className=\"notes-list\">\n      {importantNotes.length > 0 ? (\n        importantNotes.map((note, idx) => (\n          <div key={idx} className=\"note-item\">\n            <strong className=\"note-author\">{note.addedBy}</strong>\n            <p className=\"note-text\">{note.text}</p>\n            <span className=\"note-time\">\n              {new Date(note.timestamp).toLocaleString()}\n            </span>\n          </div>\n        ))\n      ) : (\n        <p className=\"no-notes\">Одоогоор анхаарах зүйлс алга байна.</p>\n      )}\n    </div>\n\n    {/* New Note Input */}\n    <div className=\"new-note-form\">\n      <textarea\n        className=\"note-input\"\n        placeholder=\"Анхаарах зүйл бичих...\"\n        value={newImportantNote}\n        onChange={(e) => setNewImportantNote(e.target.value)}\n      ></textarea>\n      <div className=\"buttons\">\n        <button className=\"add-note-button\" onClick={handleAddImportantNote}>\n          Нэмэх\n        </button>\n      </div>\n    </div>\n  </div>\n)}\n\n\n\n\n\n\n{viewOption === \"preview\" && userRole !== \"add\" && (\n  <div className=\"view-popup\">\n    {!selectedCategory && (\n      <div>\n        <h4>Ангилалаа сонгоно уу!</h4>\n        {categories.map((category, idx) => (\n          <button key={idx} onClick={() => handleCategoryClick(category)}>\n            {category.name}\n          </button>\n        ))}\n      </div>\n    )}\n\n    {selectedCategory && (\n      <div className=\"category-preview\">\n        <h4>{selectedCategory.name}</h4>\n        \n        {/* Display Options */}\n        {selectedCategory.options.map((option, idx) => (\n          <div key={idx}>\n            <label>{option}:</label>\n            <input\n              type=\"text\"\n              value={inputData[option] || \"\"}\n              onChange={(e) => handleInputChange(e, option)}\n              disabled={userRole === \"preview\"} \n            />\n          </div>\n        ))}\n\n        <div className=\"new-comment-form\">\n          <button\n            className=\"back-button\"\n            onClick={() => setSelectedCategory(null)}\n          >\n            Буцах\n          </button>\n\n          {(userRole === \"admin\" || userRole === \"add\") && (\n            <button onClick={handleSubmit} disabled={isSubmitting}>\n              {isSubmitting ? \"Илгээж байна...\" : \"Хадгалах\"}\n            </button>\n          )}\n        </div>\n      </div>\n    )}\n  </div>\n)}\n\n\n\n\n\n\n\n\n\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Room;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Room.css\";\nimport { db } from \"../firebase\";\nimport { collection, addDoc, doc, getDocs, getDoc, updateDoc } from \"firebase/firestore\";\nimport { auth } from \"../firebase\";\nimport * as XLSX from \"xlsx\";\n\nconst Room = ({ roomName, startDate, endDate }) => {\n  const [isOpen, setIsOpen] = useState(true);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [inputData, setInputData] = useState({});\n  const [savedData, setSavedData] = useState({});\n  const [viewOption, setViewOption] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [userName, setUserName] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [viewCategory, setViewCategory] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [isLoadingData, setIsLoadingData] = useState(false);\n  const [importantNotes, setImportantNotes] = useState([]);\n  const [newImportantNote, setNewImportantNote] = useState(\"\");\n  const [importantDates, setImportantDates] = useState([]);\n  const [isGeneralVisible, setIsGeneralVisible] = useState(false);\n  const [isOption1Visible, setIsOption1Visible] = useState(false);\n  const [isOption2Visible, setIsOption2Visible] = useState(false);\n  const [isOption3Visible, setIsOption3Visible] = useState(false);\n  const [savedData_tsahilgaan, setSavedData_tsahilgaan] = useState();\n  const [savedData_illeg, setSavedData_illeg] = useState();\n  const [savedData_usan, setSavedData_usan] = useState();\n\n\n\n  const categories = [\n    { name: \"Тарилга\", options: [\"Cудас\", \"Дусал\", \"Булчин\", \"Арьсан дор\", \"Арьсан дотор\"] },\n    { name: \"Гардан ажилбар\", options: [\"Амин үзүүлэлт\", \"Антибиотик/тариагаар/\", \"Антибиотик/уухаар/\", \"Уян зүү\", \"Яаралтай тусламж (O2)\", \"Нүдэнд эм дусаах\", \"Нүдэнд тос хавчуулах\", \"Хамар цэвэрлэх, угаах\", \"Хамарт эм дусаах\", \"Чих цэвэрлэх, угаах\", \"Чихэнд эм дусаах\", \"Утлага хийх\", \"Клизм тавих\", \"Шулуун гэдсэнд лаа хийх\", \"Биеийн жин үзэж тэмдэглэх\", \"Шарх цэвэрлэх\", \"Боолт хийх\", \"Гардан хооллосон хүүхэд\", \"Эм гардан уулгасан\", \"Толгойд тос түрхэх\"] },\n    { name: \"АШББ хөтлөх\", options: [\"Эмийн түүвэр хийх\", \"Стори бодох\", \"Сувилгааны түүх хөтлөх\"] },\n    { name: \"Шинжилгээ\", options: [\"Биохими\", \"Цусны ерөнхий\", \"ЦЕШ\", \"ШЕШ\", \"Цагаан хорхой\", \"Рентген\", \"ЭХО\", \"Нарийн мэргэжлийн эмчийн үзлэг\"] },\n    { name: \"Асаргаа, сувилагаа\", options: [\"Усанд оруулах\", \"Ор засаж, цэвэрлэх\", \"Цагаан хэрэглэл солих\", \"Хэсэгчилсэн угаалга хийх (гар, хөл, шүд, ам)\"] },\n    { name: \"ДХ\", options: [\"Хөдөлгөөн засал\", \"Хөдөлмөр засал\", \"Хэл засал\"] },\n    { name: \"Бусад ажил\", options: [\"Эмийн сангаас эм авах\", \"Эмчилгээ тараах\", \"Эмчлүүлэгч нарт зөвлөгөө өгөх, хяналт тавих\", \"Агаарт гаргасан\", \"Ариутгал цэвэрлэгээ хийсэн\", \"ЭМБО олгосон үйлчлүүлэгчийн тоо\", \"Дотоод журам танилцуулах\", \"Халдвартай хог хаягдал\", \"Аюулгүй хайрцаг\", \"Квартз\"] },\n  ];\n\n  const categories_tsahilgaan = [\n    { name: \"TENS- бага насны хүүхэд\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"TENS-том хүүхэд\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"EMS\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"Интерфренци\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"Халуун бигнүүр\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"Физиотерми-S\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"Wocastimuliats\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"Air массаж\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"Ультра звук\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n  ];\n\n  const categories_illeg = [\n    { name: \"Бүтэн биеийн зөөлөн бариа\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"Толгой, хүзүү, нурууны  бариа\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"Сээр бүсэлхий, ууц нурууны бариа\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"4 мөч (түнх,гуя, өвдөг,шилбэ,тавхай( (мөр, бугалга, шуу, тохой, сарвуу)\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n  ];\n\n  const categories_usan = [\n    { name: \"Жакуз ванн\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"4 мөчний ванн\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n    { name: \"Церкуляр душ\", options: [\"Амбулатори\", \"Тасаг\", \"Ажилчид\"] },\n  ];\n\n\n  const categoryMapping = {\n    \"Тарилга\": \"Тарилга\",\n    \"Гардан ажилбар\": \"Aмин үзүүлэлт\",\n    \"АШББ хөтлөх\": \"Гардан ажилбар\",\n    \"Шинжилгээ\": \"Шинжилгээ\",\n    \"Асаргаа, сувилагаа\": \"Асаргаа, Сувилгаа\",\n    \"ДХ\": \"Д/Х\",\n    \"Бусад ажил\": \"Биеийн жин\",\n  };\n  \n\n  const fetchUserRoleAndName = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        const userRef = doc(db, \"users\", user.uid);\n        const userDoc = await getDoc(userRef);\n\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          setUserRole(userData.role);\n          setUserName(userData.displayName);\n        } else {\n          console.error(\"User document does not exist.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching user role and name: \", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserRoleAndName();\n  }, []);\n\n\n\n\n\n\n\n\n\n  \n\n  const fetchSavedData = async () => {\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const collections = [\n        \"тарилга\",\n        \"гардан ажилбар\",\n        \"ашбб хөтлөх\",\n        \"шинжилгээ\",\n        \"асаргаа, сувилагаа\",\n        \"дх\",\n        \"бусад ажил\",\n      ];\n\n      let aggregatedData = {};\n\n      for (const category of collections) {\n        const categoryRef = collection(roomRef, category);\n        const querySnapshot = await getDocs(categoryRef);\n\n        querySnapshot.forEach((doc) => {\n          const docData = doc.data();\n          const docDate = docData.date;\n          const addedBy = docData.addedBy;\n\n          if (docDate >= startDate && docDate <= endDate) {\n            if (!aggregatedData[category]) {\n              aggregatedData[category] = {};\n            }\n\n            const categoryData = docData.data || {};\n            for (const option in categoryData) {\n              if (!aggregatedData[category][option]) {\n                aggregatedData[category][option] = [];\n              }\n\n              aggregatedData[category][option].push({\n                date: docDate,\n                value: categoryData[option],\n                addedBy,\n              });\n            }\n          }\n        });\n      }\n\n      setSavedData(aggregatedData);\n    } catch (error) {\n      console.error(\"Өгөгдлийг татахад алдаа гарлаа: \", error);\n    }\n  };\n\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      fetchSavedData();\n    }\n  }, [startDate, endDate, roomName]);\n\n\n\n  const handleExportToExcel_main = async () => {\n    if (isLoadingData) {\n      console.log(\"Data is still loading. Please wait...\");\n      return;\n    }\n  \n    setIsLoadingData(true);\n  \n    try {\n      await fetchSavedData();\n  \n      // Check if data length is greater than zero before proceeding with export\n      if (!savedData || Object.keys(savedData).length === 0) {\n        console.log(\"No data available to export.\");\n        alert(\"Мэдээлэл авахад алдаа гарлаа, түр хүлээгээд ахин оролдоно уу.\");\n        return; // Don't proceed if no data is available\n      }\n  \n      // Proceed with generating the Excel file\n      const workbook = XLSX.utils.book_new();\n      const worksheetData = [];\n  \n      // Calculate the number of days between startDate and endDate\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const diffInTime = end.getTime() - start.getTime();\n      const diffInDays = Math.ceil(diffInTime / (1000 * 3600 * 24)) + 1; // Convert milliseconds to days and add 1\n  \n      const dateRange = Array.from({ length: diffInDays }, (_, i) => {\n        const nextDate = new Date(start);\n        nextDate.setDate(start.getDate() + i); // Increment by one day\n        return nextDate.toISOString().split(\"T\")[0];\n      });\n  \n      worksheetData.push([\"Ангилал\", \"Сонголт\", ...dateRange, \"Нийт Үйлчлүүлэгч\", \"Нийт Давтамж\"]);// Added \"Төсөв\" column for the sum after `#`\n  \n      // Fill in Data for all categories and options\n      categories.forEach((category) => {\n        const options = category.options;\n  \n        options.forEach((option) => {\n          const row = [\n            category.name, // Category Name\n            option, // Option Name\n            ...dateRange.map((date) => {\n              const matchingData = savedData[category.name.toLowerCase()]?.[option]?.find(\n                (entry) => entry.date === date\n              );\n              return matchingData ? matchingData.value : \"\"; // Empty string for no data\n            }),\n          ];\n  \n          // Calculate the original total for the row\n          const total = row.slice(2).reduce((sum, value) => sum + (parseInt(value, 10) || 0), 0);\n          row.push(total); // Add the total value to the row\n  \n          // Calculate the sum of numbers after '#' for the new \"Төсөв\" column\n          const budgetTotal = row.slice(2).reduce((sum, value) => {\n            const match = value?.toString().match(/#(\\d+)/);\n            const numberAfterHash = match ? parseInt(match[1], 10) : 0;\n            return sum + numberAfterHash;\n          }, 0);\n          row.push(budgetTotal); // Add the budget total value to the new column\n  \n          worksheetData.push(row);\n        });\n      });\n  \n      const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\n  \n      // Merge Cells for Category Column\n      let currentRow = 1;\n      categories.forEach((category) => {\n        const options = category.options;\n        const rowSpan = options.length;\n  \n        worksheet[\"!merges\"] = worksheet[\"!merges\"] || [];\n        worksheet[\"!merges\"].push({\n          s: { r: currentRow, c: 0 },\n          e: { r: currentRow + rowSpan - 1, c: 0 },\n        });\n  \n        currentRow += rowSpan;\n      });\n  \n      XLSX.utils.book_append_sheet(workbook, worksheet, `${roomName} Data`);\n      XLSX.writeFile(workbook, `${roomName}-өдрийн_эмчилгээ.xlsx`);\n    } catch (error) {\n      console.error(\"Error occurred while exporting data:\", error);\n      alert(\"Мэдээ татах болон экспорт хийхэд алдаа гарлаа.\");\n    } finally {\n      setIsLoadingData(false); // Reset loading state after export attempt\n    }\n  };\n  \n  \n\n  const fetchSavedData_illeg = async () => {\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const collections = [\n        \"бүтэн биеийн зөөлөн бариа\",\n        \"толгой, хүзүү, нурууны  бариа\",\n        \"сээр бүсэлхий, ууц нурууны бариа\",\n        \"4 мөч (түнх,гуя, өвдөг,шилбэ,тавхай( (мөр, бугалга, шуу, тохой, сарвуу)\"\n      ];\n  \n      let aggregatedData = {};\n  \n      for (const category of collections) {\n        const categoryRef = collection(roomRef, category);\n        const querySnapshot = await getDocs(categoryRef);\n  \n        querySnapshot.forEach((doc) => {\n          const docData = doc.data();\n          const docDate = docData.date;\n          const addedBy = docData.addedBy;\n  \n          if (docDate >= startDate && docDate <= endDate) {\n            if (!aggregatedData[category]) {\n              aggregatedData[category] = {};\n            }\n  \n            const categoryData = docData.data || {};\n            for (const option in categoryData) {\n              if (!aggregatedData[category][option]) {\n                aggregatedData[category][option] = [];\n              }\n  \n              aggregatedData[category][option].push({\n                date: docDate,\n                value: categoryData[option],\n                addedBy,\n              });\n            }\n          }\n        });\n      }\n  \n      setSavedData_illeg(aggregatedData);\n    } catch (error) {\n      console.error(\"Өгөгдлийг татахад алдаа гарлаа: \", error);\n    }\n  };\n  \n  useEffect(() => {\n    if (startDate && endDate) {\n      fetchSavedData_illeg();\n    }\n  }, [startDate, endDate, roomName]);\n  \n  \n\n\n  const handleExportToExcel_illeg = async () => {\n    if (isLoadingData) {\n      console.log(\"Data is still loading. Please wait...\");\n      return;\n    }\n  \n    setIsLoadingData(true);\n  \n    try {\n      await fetchSavedData_illeg();\n  \n      // Check if data length is greater than zero before proceeding with export\n      if (!savedData_illeg || Object.keys(savedData_illeg).length === 0) {\n        console.log(\"No data available to export.\");\n        alert(\"Мэдээлэл авахад алдаа гарлаа, түр хүлээгээд ахин оролдоно уу.\");\n        return; // Don't proceed if no data is available\n      }\n  \n      // Proceed with generating the Excel file\n      const workbook = XLSX.utils.book_new();\n      const worksheetData = [];\n  \n      // Calculate the number of days between startDate and endDate\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const diffInTime = end.getTime() - start.getTime();\n      const diffInDays = Math.ceil(diffInTime / (1000 * 3600 * 24)) + 1; // Convert milliseconds to days and add 1\n  \n      const dateRange = Array.from({ length: diffInDays }, (_, i) => {\n        const nextDate = new Date(start);\n        nextDate.setDate(start.getDate() + i); // Increment by one day\n        return nextDate.toISOString().split(\"T\")[0];\n      });\n  \n       worksheetData.push([\"Ангилал\", \"Сонголт\", ...dateRange, \"Нийт Өвчтөн\", \"Нийт Эмчилгээ\"]);// Added \"Төсөв\" column for the sum after `#`\n\n    // Fill in Data for all categories and options\n    categories_illeg.forEach((category) => {\n      const options = category.options;\n\n      options.forEach((option) => {\n        const row = [\n          category.name, // Category Name\n          option, // Option Name\n          ...dateRange.map((date) => {\n            const matchingData = savedData_illeg[category.name.toLowerCase()]?.[option]?.find(\n              (entry) => entry.date === date\n            );\n            return matchingData ? matchingData.value : \"\"; // Empty string for no data\n          }),\n        ];\n\n        // Calculate the original total for the row\n        const total = row.slice(2).reduce((sum, value) => sum + (parseInt(value, 10) || 0), 0);\n        row.push(total); // Add the total value to the row\n\n        // Calculate the sum of numbers after '#' for the new \"Төсөв\" column\n        const budgetTotal = row.slice(2).reduce((sum, value) => {\n          const match = value?.toString().match(/#(\\d+)/);\n          const numberAfterHash = match ? parseInt(match[1], 10) : 0;\n          return sum + numberAfterHash;\n        }, 0);\n        row.push(budgetTotal); // Add the budget total value to the new column\n\n        worksheetData.push(row);\n      });\n    });\n\n    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\n\n    // Merge Cells for Category Column\n    let currentRow = 1;\n    categories_illeg.forEach((category) => {\n      const options = category.options;\n      const rowSpan = options.length;\n\n      worksheet[\"!merges\"] = worksheet[\"!merges\"] || [];\n      worksheet[\"!merges\"].push({\n        s: { r: currentRow, c: 0 },\n        e: { r: currentRow + rowSpan - 1, c: 0 },\n      });\n\n      currentRow += rowSpan;\n    });\n\n    XLSX.utils.book_append_sheet(workbook, worksheet, `${roomName} Data`);\n    XLSX.writeFile(workbook, `${roomName}-өдрийн_эмчилгээ.xlsx`);\n  } catch (error) {\n    console.error(\"Error occurred while exporting data:\", error);\n    alert(\"Мэдээ татах болон экспорт хийхэд алдаа гарлаа.\");\n  } finally {\n    setIsLoadingData(false); // Reset loading state after export attempt\n  }\n};\n\n  \n\n\n  \n\n\n\n  const fetchSavedData_usan = async () => {\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const collections = [\n        \"жакуз ванн\",\n        \"4 мөчний ванн\",\n        \"церкуляр душ\",\n      ];\n  \n      let aggregatedData = {};\n  \n      for (const category of collections) {\n        const categoryRef = collection(roomRef, category);\n        const querySnapshot = await getDocs(categoryRef);\n  \n        querySnapshot.forEach((doc) => {\n          const docData = doc.data();\n          const docDate = docData.date;\n          const addedBy = docData.addedBy;\n  \n          if (docDate >= startDate && docDate <= endDate) {\n            if (!aggregatedData[category]) {\n              aggregatedData[category] = {};\n            }\n  \n            const categoryData = docData.data || {};\n            for (const option in categoryData) {\n              if (!aggregatedData[category][option]) {\n                aggregatedData[category][option] = [];\n              }\n  \n              aggregatedData[category][option].push({\n                date: docDate,\n                value: categoryData[option],\n                addedBy,\n              });\n            }\n          }\n        });\n      }\n  \n      setSavedData_usan(aggregatedData);\n    } catch (error) {\n      console.error(\"Өгөгдлийг татахад алдаа гарлаа: \", error);\n    }\n  };\n  \n  useEffect(() => {\n    if (startDate && endDate) {\n      fetchSavedData_usan();\n    }\n  }, [startDate, endDate, roomName]);\n  \n  const handleExportToExcel_usan = async () => {\n    if (isLoadingData) {\n      console.log(\"Data is still loading. Please wait...\");\n      return;\n    }\n  \n    setIsLoadingData(true);\n  \n    try {\n      await fetchSavedData_usan();\n  \n      // Check if data length is greater than zero before proceeding with export\n      if (!savedData_usan || Object.keys(savedData_usan).length === 0) {\n        console.log(\"No data available to export.\");\n        alert(\"Мэдээлэл авахад алдаа гарлаа, түр хүлээгээд ахин оролдоно уу.\");\n        return; // Don't proceed if no data is available\n      }\n  \n      // Proceed with generating the Excel file\n      const workbook = XLSX.utils.book_new();\n      const worksheetData = [];\n  \n      // Calculate the number of days between startDate and endDate\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const diffInTime = end.getTime() - start.getTime();\n      const diffInDays = Math.ceil(diffInTime / (1000 * 3600 * 24)) + 1; // Convert milliseconds to days and add 1\n  \n      const dateRange = Array.from({ length: diffInDays }, (_, i) => {\n        const nextDate = new Date(start);\n        nextDate.setDate(start.getDate() + i); // Increment by one day\n        return nextDate.toISOString().split(\"T\")[0];\n      });\n \n       worksheetData.push([\"Ангилал\", \"Сонголт\", ...dateRange, \"Нийт Өвчтөн\", \"Нийт Эмчилгээ\"]);// Added \"Төсөв\" column for the sum after `#`\n\n    // Fill in Data for all categories and options\n    categories_usan.forEach((category) => {\n      const options = category.options;\n\n      options.forEach((option) => {\n        const row = [\n          category.name, // Category Name\n          option, // Option Name\n          ...dateRange.map((date) => {\n            const matchingData = savedData_usan[category.name.toLowerCase()]?.[option]?.find(\n              (entry) => entry.date === date\n            );\n            return matchingData ? matchingData.value : \"\"; // Empty string for no data\n          }),\n        ];\n\n        // Calculate the original total for the row\n        const total = row.slice(2).reduce((sum, value) => sum + (parseInt(value, 10) || 0), 0);\n        row.push(total); // Add the total value to the row\n\n        // Calculate the sum of numbers after '#' for the new \"Төсөв\" column\n        const budgetTotal = row.slice(2).reduce((sum, value) => {\n          const match = value?.toString().match(/#(\\d+)/);\n          const numberAfterHash = match ? parseInt(match[1], 10) : 0;\n          return sum + numberAfterHash;\n        }, 0);\n        row.push(budgetTotal); // Add the budget total value to the new column\n\n        worksheetData.push(row);\n      });\n    });\n\n    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\n\n    // Merge Cells for Category Column\n    let currentRow = 1;\n    categories_usan.forEach((category) => {\n      const options = category.options;\n      const rowSpan = options.length;\n\n      worksheet[\"!merges\"] = worksheet[\"!merges\"] || [];\n      worksheet[\"!merges\"].push({\n        s: { r: currentRow, c: 0 },\n        e: { r: currentRow + rowSpan - 1, c: 0 },\n      });\n\n      currentRow += rowSpan;\n    });\n\n    XLSX.utils.book_append_sheet(workbook, worksheet, `${roomName} Data`);\n    XLSX.writeFile(workbook, `${roomName}-өдрийн_эмчилгээ.xlsx`);\n  } catch (error) {\n    console.error(\"Error occurred while exporting data:\", error);\n    alert(\"Мэдээ татах болон экспорт хийхэд алдаа гарлаа.\");\n  } finally {\n    setIsLoadingData(false); // Reset loading state after export attempt\n  }\n};\n  \n\n\n\n\n  const fetchSavedData_tsahilgaan = async () => {\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const collections = [\n        \"tens- бага насны хүүхэд\",\n        \"tens-том хүүхэд\",\n        \"ems\",\n        \"интерфренци\",\n        \"халуун бигнүүр\",\n        \"физиотерми-s\",\n        \"wocastimuliats\",\n        \"air массаж\",\n        \"ультра звук\"\n      ];\n  \n      let aggregatedData = {};\n  \n      for (const category of collections) {\n        const categoryRef = collection(roomRef, category);\n        const querySnapshot = await getDocs(categoryRef);\n  \n        querySnapshot.forEach((doc) => {\n          const docData = doc.data();\n          const docDate = docData.date;\n          const addedBy = docData.addedBy;\n  \n          if (docDate >= startDate && docDate <= endDate) {\n            if (!aggregatedData[category]) {\n              aggregatedData[category] = {};\n            }\n  \n            const categoryData = docData.data || {};\n            for (const option in categoryData) {\n              if (!aggregatedData[category][option]) {\n                aggregatedData[category][option] = [];\n              }\n  \n              aggregatedData[category][option].push({\n                date: docDate,\n                value: categoryData[option],\n                addedBy,\n              });\n            }\n          }\n        });\n      }\n  \n      setSavedData_tsahilgaan(aggregatedData);\n    } catch (error) {\n      console.error(\"Өгөгдлийг татахад алдаа гарлаа: \", error);\n    }\n  };\n  \n  useEffect(() => {\n    if (startDate && endDate) {\n      fetchSavedData_tsahilgaan();\n    }\n  }, [startDate, endDate, roomName]);\n  \n\n\n  \n  const handleExportToExcel_tsahilgaan = async () => {\n    if (isLoadingData) {\n      console.log(\"Data is still loading. Please wait...\");\n      return;\n    }\n  \n    setIsLoadingData(true);\n  \n    try {\n      await fetchSavedData_tsahilgaan();\n  \n      // Check if data length is greater than zero before proceeding with export\n      if (!savedData_tsahilgaan || Object.keys(savedData_tsahilgaan).length === 0) {\n        console.log(\"No data available to export.\");\n        alert(\"Мэдээлэл авахад алдаа гарлаа, түр хүлээгээд ахин оролдоно уу.\");\n        return; // Don't proceed if no data is available\n      }\n  \n      // Proceed with generating the Excel file\n      const workbook = XLSX.utils.book_new();\n      const worksheetData = [];\n  \n      // Calculate the number of days between startDate and endDate\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const diffInTime = end.getTime() - start.getTime();\n      const diffInDays = Math.ceil(diffInTime / (1000 * 3600 * 24)) + 1; // Convert milliseconds to days and add 1\n  \n      const dateRange = Array.from({ length: diffInDays }, (_, i) => {\n        const nextDate = new Date(start);\n        nextDate.setDate(start.getDate() + i); // Increment by one day\n        return nextDate.toISOString().split(\"T\")[0];\n      });\n  \n       worksheetData.push([\"Ангилал\", \"Сонголт\", ...dateRange, \"Нийт Өвчтөн\", \"Нийт Эмчилгээ\"]);// Added \"Төсөв\" column for the sum after `#`\n\n    // Fill in Data for all categories and options\n    categories_tsahilgaan.forEach((category) => {\n      const options = category.options;\n\n      options.forEach((option) => {\n        const row = [\n          category.name, // Category Name\n          option, // Option Name\n          ...dateRange.map((date) => {\n            const matchingData = savedData_tsahilgaan[category.name.toLowerCase()]?.[option]?.find(\n              (entry) => entry.date === date\n            );\n            return matchingData ? matchingData.value : \"\"; // Empty string for no data\n          }),\n        ];\n\n        // Calculate the original total for the row\n        const total = row.slice(2).reduce((sum, value) => sum + (parseInt(value, 10) || 0), 0);\n        row.push(total); // Add the total value to the row\n\n        // Calculate the sum of numbers after '#' for the new \"Төсөв\" column\n        const budgetTotal = row.slice(2).reduce((sum, value) => {\n          const match = value?.toString().match(/#(\\d+)/);\n          const numberAfterHash = match ? parseInt(match[1], 10) : 0;\n          return sum + numberAfterHash;\n        }, 0);\n        row.push(budgetTotal); // Add the budget total value to the new column\n\n        worksheetData.push(row);\n      });\n    });\n\n    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\n\n    // Merge Cells for Category Column\n    let currentRow = 1;\n    categories_tsahilgaan.forEach((category) => {\n      const options = category.options;\n      const rowSpan = options.length;\n\n      worksheet[\"!merges\"] = worksheet[\"!merges\"] || [];\n      worksheet[\"!merges\"].push({\n        s: { r: currentRow, c: 0 },\n        e: { r: currentRow + rowSpan - 1, c: 0 },\n      });\n\n      currentRow += rowSpan;\n    });\n\n    XLSX.utils.book_append_sheet(workbook, worksheet, `${roomName} Data`);\n    XLSX.writeFile(workbook, `${roomName}-өдрийн_эмчилгээ.xlsx`);\n  } catch (error) {\n    console.error(\"Error occurred while exporting data:\", error);\n    alert(\"Мэдээ татах болон экспорт хийхэд алдаа гарлаа.\");\n  } finally {\n    setIsLoadingData(false); // Reset loading state after export attempt\n  }\n};\n\n  \n\n\n\n\n\n\n\n\n\n\n\n  \n\n  const handleCategoryClick = async (category) => {\n    if (userRole === \"add\") {\n      alert(\"Танд мэдээ нэмэх эрх байхгүй байна.\");\n      return;\n    }\n    setSelectedCategory(category);\n  \n    // Fetch existing data for the category and date (startDate)\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const categoryRef = collection(roomRef, category.name.toLowerCase());\n  \n      // Use the selected startDate for filtering\n      const querySnapshot = await getDocs(categoryRef);\n      const existingData = {};\n  \n      querySnapshot.forEach((doc) => {\n        const docData = doc.data();\n        if (docData.date === startDate) {\n          Object.assign(existingData, docData.data);\n        }\n      });\n  \n      setInputData(existingData); // Prepopulate input fields with fetched data\n    } catch (error) {\n      console.error(\"Одоо байгаа мэдээг татахад алдаа гарлаа:\", error);\n    }\n  };\n  \n\n\n\n\n\n\n\n\n\n  const handleInputChange = (e, option) => {\n    const value = e.target.value;\n  \n    // Allow only numbers and the \"#\" symbol\n    if (/^[0-9#]*$/.test(value)) {\n      setInputData({ ...inputData, [option]: value });\n    }\n  };\n\n\n\n  const handleSubmit = async () => {\n    if (isSubmitting) return;\n  \n    try {\n      if (!selectedCategory) {\n        alert(\"Ангилал сонгоно уу!\");\n        return;\n      }\n  \n      if (Object.keys(inputData).length === 0) {\n        alert(\"Дор хаяж нэг талбарыг бөглөнө үү!\");\n        return;\n      }\n  \n      setIsSubmitting(true);\n  \n      const roomRef = doc(db, \"rooms\", roomName);\n      const categoryRef = collection(roomRef, selectedCategory.name.toLowerCase());\n  \n      // Store inputData as strings (including the '#' symbol)\n      const inputDataAsStrings = { ...inputData };\n  \n      // Use the startDate for saving\n      const user = auth.currentUser;\n  \n      if (!userName) {\n        alert(\"Хэрэглэгчийн нэр байхгүй байна!\");\n        setIsSubmitting(false);\n        return;\n      }\n  \n      let existingDocId = null;\n      const querySnapshot = await getDocs(categoryRef);\n  \n      querySnapshot.forEach((doc) => {\n        const docData = doc.data();\n        if (docData.date === startDate) {\n          existingDocId = doc.id;\n        }\n      });\n  \n      if (existingDocId) {\n        const docRef = doc(categoryRef, existingDocId);\n        await updateDoc(docRef, {\n          data: inputDataAsStrings, // Save data as strings (with '#')\n          addedBy: userName,\n        });\n        alert(\"Мэдээг амжилттай шинэчилсэн!\");\n      } else {\n        await addDoc(categoryRef, {\n          category: selectedCategory.name,\n          data: inputDataAsStrings, // Save data as strings (with '#')\n          date: startDate, // Save with startDate\n          addedBy: userName,\n        });\n        alert(\"Мэдээг амжилттай хадгаллаа!\");\n      }\n  \n      setInputData({});\n      setSelectedCategory(null);\n      fetchSavedData(); // Refresh the saved data\n    } catch (error) {\n      console.error(\"Мэдээг хадгалахад алдаа гарлаа: \", error);\n      alert(\"Мэдээг хадгалахад алдаа гарлаа\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  \n\n\n\n\n\n\n\n\n\n\n\n  const handleViewCategoryClick = async (category) => {\n    setViewCategory(category);\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const categoryRef = collection(roomRef, `${category.name.toLowerCase()}_comments`);\n  \n      // Construct the query to filter comments based on the date range\n      const querySnapshot = await getDocs(categoryRef);\n      const fetchedComments = [];\n  \n      querySnapshot.forEach((doc) => {\n        const commentData = doc.data();\n        const commentTimestamp = new Date(commentData.timestamp);\n        const commentDate = commentTimestamp.toISOString().split(\"T\")[0]; // Get the date part\n  \n        // Check if the comment date is within the selected date range\n        if (commentDate >= startDate && commentDate <= endDate) {\n          fetchedComments.push({ id: doc.id, ...commentData });\n        }\n      });\n  \n      // Sort comments by timestamp\n      fetchedComments.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n  \n      setComments(fetchedComments);\n    } catch (error) {\n      console.error(\"Алдаа: Сэтгэгдлийг татаж чадсангүй\", error);\n    }\n  };\n\n  \n  \n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n  \n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const categoryRef = collection(roomRef, `${viewCategory.name.toLowerCase()}_comments`);\n  \n      await addDoc(categoryRef, {\n        text: newComment,\n        timestamp: new Date().toISOString(),\n        addedBy: userName || \"Unknown\",\n      });\n  \n      setNewComment(\"\");\n      handleViewCategoryClick(viewCategory); // Refresh comments\n    } catch (error) {\n      console.error(\"Сэтгэгдэл нэмэхэд алдаа гарлаа: \", error);\n    }\n  };\n\nconst fetchImportantNotes = async () => {\n  try {\n    const roomRef = doc(db, \"rooms\", roomName);\n    const notesRef = collection(roomRef, \"important_notes\");\n\n    // Fetch all notes\n    const querySnapshot = await getDocs(notesRef);\n    const fetchedNotes = [];\n\n    querySnapshot.forEach((doc) => {\n      const noteData = doc.data();\n      const noteTimestamp = new Date(noteData.timestamp);\n      const noteDate = noteTimestamp.toISOString().split(\"T\")[0]; // Extract date part\n\n      // Filter based on the selected date range\n      if (noteDate >= startDate && noteDate <= endDate) {\n        fetchedNotes.push({ id: doc.id, ...noteData });\n      }\n    });\n\n    // Sort the filtered notes by timestamp\n    fetchedNotes.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n\n    setImportantNotes(fetchedNotes);\n  } catch (error) {\n    console.error(\"Error fetching important notes:\", error);\n  }\n};\n\n\n  const handleAddImportantNote = async () => {\n    if (!newImportantNote.trim()) return;\n    try {\n      const roomRef = doc(db, \"rooms\", roomName);\n      const notesRef = collection(roomRef, \"important_notes\");\n\n      await addDoc(notesRef, {\n        text: newImportantNote,\n        timestamp: new Date().toISOString(),\n        addedBy: userName || \"Unknown\",\n      });\n\n      setNewImportantNote(\"\");\n      fetchImportantNotes(); // Refresh the notes\n    } catch (error) {\n      console.error(\"Error adding important note:\", error);\n    }\n  };\n\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchImportantNotes();\n    }\n  }, [isOpen]);\n\n\n\n\n  return (\n    <div className=\"room\">\n      <h3>{roomName}</h3>\n      {(isLoadingData || isSubmitting) && (\n            <div className=\"loading-overlay\">\n                <div className=\"spinner\"></div>\n            </div>\n        )}\n\n{isOpen && (\n  <div className=\"popup\">\n    {userRole !== \"preview\" && (\n      <button\n        onClick={() => setViewOption(\"important\")}\n        style={{\n          backgroundColor: '#cd5f08',\n          color: 'white',\n          padding: '12px 20px',\n          border: 'none',\n          borderRadius: '5px',\n          fontSize: '1rem',\n          fontWeight: 'bold',\n          cursor: 'pointer'\n        }}\n      >\n        Анхаарал Татсан\n      </button>\n    )}\n    \n    <div>\n\n\n  {/* General Button */}\n  <button onClick={() => {\n        setIsGeneralVisible(!isGeneralVisible);\n        // Hide all other options when General button is clicked\n        setIsOption1Visible(false);\n        setIsOption2Visible(false);\n        setIsOption3Visible(false);\n      }}>\n    Өдрийн эмчилгээ\n  </button>\n  {/* Show these buttons only if General button is clicked */}\n  {isGeneralVisible && (\n    <div>\n      {userRole !== \"preview\" && (\n        <button\n          onClick={() => setViewOption(\"add\")}\n          style={{ backgroundColor: '#7dc711', color: 'white' }}\n        >\n          Сувилагчийн Тэмдэглэл\n        </button>\n      )}\n\n      <button\n        onClick={() => setViewOption(\"preview\")}\n        style={{ backgroundColor: '#7dc711', color: 'white' }}\n      >\n        Тоон Мэдээ\n      </button>\n\n      <button\n        onClick={handleExportToExcel_main}\n        style={{ backgroundColor: '#7dc711', color: 'white' }}\n      >\n        Тоон Мэдээ Татах\n      </button>\n    </div>\n  )}\n</div>\n\n<div>\n  {/* General Button */}\n  <button onClick={() => {\n    setIsOption1Visible(!isOption1Visible);\n\n    setIsGeneralVisible(false);\n    setIsOption2Visible(false);\n    setIsOption3Visible(false);\n    }}>\n    Цахилгаан эмчилгээ\n  </button>\n\n  {/* Show these buttons only if General button is clicked */}\n  {isOption1Visible && (\n    <div>\n      {userRole !== \"preview\" && (\n        <button\n          onClick={() => setViewOption(\"add-option1\")}\n          style={{ backgroundColor: '#7dc711', color: 'white' }}\n        >\n          Сувилагчийн Тэмдэглэл\n        </button>\n      )}\n\n      <button\n        onClick={() => setViewOption(\"preview-option1\")}\n        style={{ backgroundColor: '#7dc711', color: 'white' }}\n      >\n        Тоон Мэдээ\n      </button>\n\n      <button\n        onClick={handleExportToExcel_tsahilgaan}\n        style={{ backgroundColor: '#7dc711', color: 'white' }}\n      >\n        Тоон Мэдээ Татах\n      </button>\n    </div>\n  )}\n</div>\n\n\n\n\n    <div>\n  {/* General Button */}\n  <button onClick={() => {\n    setIsOption2Visible(!isOption2Visible);\n\n    setIsGeneralVisible(false);\n    setIsOption1Visible(false);\n    setIsOption3Visible(false);\n    }}>\n    Иллэг засал эмчилгээний сувилахуйн тусламж\n  </button>\n\n  {/* Show these buttons only if General button is clicked */}\n  {isOption2Visible && (\n    <div>\n      {userRole !== \"preview\" && (\n        <button \n        onClick={() => setViewOption(\"add-option2\")}\n        style={{ backgroundColor: '#7dc711', color: 'white' }}\n        >Сувилагчийн Тэмдэглэл</button>\n      )}\n\n      <button\n        onClick={() => setViewOption(\"preview-option2\")}\n        style={{ backgroundColor: '#7dc711', color: 'white' }}\n      >\n        Тоон Мэдээ\n      </button>\n      <button\n        onClick={handleExportToExcel_illeg}\n        style={{ backgroundColor: '#7dc711', color: 'white' }}\n      >\n        Тоон Мэдээ Татах\n      </button>\n    </div>\n  )}\n</div>\n\n\n\n\n\n<div>\n  {/* General Button */}\n  <button onClick={() => {\n    setIsOption3Visible(!isOption3Visible);\n\n    setIsGeneralVisible(false);\n    setIsOption2Visible(false);\n    setIsOption1Visible(false);\n    }}>\n    Усан эмчилгээний сувилахуйн тусламж \n  </button>\n\n  {/* Show these buttons only if General button is clicked */}\n  {isOption3Visible && (\n    <div>\n      {userRole !== \"preview\" && (\n        <button\n          onClick={() => setViewOption(\"add-option3\")}\n          style={{ backgroundColor: '#7dc711', color: 'white' }}\n        >\n          Сувилагчийн Тэмдэглэл\n        </button>\n      )}\n\n      <button\n        onClick={() => setViewOption(\"preview-option3\")}\n        style={{ backgroundColor: '#7dc711', color: 'white' }}\n      >\n        Тоон Мэдээ\n      </button>\n      \n      <button\n        onClick={handleExportToExcel_usan}\n        style={{ backgroundColor: '#7dc711', color: 'white' }}\n      >\n        Тоон Мэдээ Татах\n      </button>\n    </div>\n  )}\n</div>\n\n\n\n    {/* View Option Logic */}\n    {viewOption === \"add\" && (\n      <div className=\"view-popup\">\n        {!viewCategory && (\n          <div>\n            <h4>Ангилалаа сонгоно уу!</h4>\n            {categories.map((category, idx) => (\n              <button key={idx} onClick={() => handleViewCategoryClick(category)}>\n                {[\"Тарилга\", \"Амин үзүүлэлт\", \"Гардан ажилбар\", \"Шинжилгээ\", \"Асаргаа, сувилгаа\", \"Д/Х\", \"Биеийн жин, ЭМБОС, Халдвар хамгаалалт\"][idx]}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {viewCategory && (\n          <div className=\"comments-container\">\n            <h4 className=\"category-title\">\n              {categoryMapping[viewCategory.name]} - Тэмдэглэгээ\n            </h4>\n\n            {/* Comments Section */}\n            <div className=\"comments\">\n              {comments.length > 0 ? (\n                comments.map((comment, idx) => (\n                  <div key={idx} className=\"comment-item\">\n                    <strong className=\"comment-author\">{comment.addedBy}</strong>\n                    <p className=\"comment-text\">{comment.text}</p>\n                    <span className=\"comment-time\">\n                      {new Date(comment.timestamp).toLocaleString()}\n                    </span>\n                  </div>\n                ))\n              ) : (\n                <p className=\"no-comments\">Одоогоор сэтгэгдэл алга байна.</p>\n              )}\n            </div>\n\n            {/* New Comment Form */}\n            <div className=\"new-comment-form\">\n              <textarea\n                className=\"comment-input\"\n                placeholder=\"Сэтгэгдэл бичих...\"\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n              ></textarea>\n              <button\n                className=\"back-button\"\n                onClick={() => setViewCategory(null)}\n              >\n                Буцах\n              </button>\n              <div className=\"buttons\">\n                <button className=\"add-comment-button\" onClick={handleAddComment}>\n                  Сэтгэгдэл нэмэх\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    )}\n\n{viewOption === \"add-option1\" && (\n      <div className=\"view-popup\">\n        {!viewCategory && (\n          <div>\n            <h4>Ангилалаа сонгоно уу!</h4>\n            {categories_tsahilgaan.map((category, idx) => (\n              <button key={idx} onClick={() => handleViewCategoryClick(category)}>\n                {[\n  \"TENS- бага насны хүүхэд\",\n  \"TENS- том хүүхэд\",\n  \"EMS\",\n  \"Интерфренци\",\n  \"Халуун бигнүүр\",\n  \"Физиотерми-S\",\n  \"Wocastimuliats\",\n  \"Air массаж\",\n  \"Ультра звук\"\n]\n[idx]}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {viewCategory && (\n          <div className=\"comments-container\">\n            <h4 className=\"category-title\">\n              {categoryMapping[viewCategory.name]} - Тэмдэглэгээ\n            </h4>\n\n            {/* Comments Section */}\n            <div className=\"comments\">\n              {comments.length > 0 ? (\n                comments.map((comment, idx) => (\n                  <div key={idx} className=\"comment-item\">\n                    <strong className=\"comment-author\">{comment.addedBy}</strong>\n                    <p className=\"comment-text\">{comment.text}</p>\n                    <span className=\"comment-time\">\n                      {new Date(comment.timestamp).toLocaleString()}\n                    </span>\n                  </div>\n                ))\n              ) : (\n                <p className=\"no-comments\">Одоогоор сэтгэгдэл алга байна.</p>\n              )}\n            </div>\n\n            {/* New Comment Form */}\n            <div className=\"new-comment-form\">\n              <textarea\n                className=\"comment-input\"\n                placeholder=\"Сэтгэгдэл бичих...\"\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n              ></textarea>\n              <button\n                className=\"back-button\"\n                onClick={() => setViewCategory(null)}\n              >\n                Буцах\n              </button>\n              <div className=\"buttons\">\n                <button className=\"add-comment-button\" onClick={handleAddComment}>\n                  Сэтгэгдэл нэмэх\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    )}\n\n{viewOption === \"add-option2\" && (\n      <div className=\"view-popup\">\n        {!viewCategory && (\n          <div>\n            <h4>Ангилалаа сонгоно уу!</h4>\n            {categories_illeg.map((category, idx) => (\n              <button key={idx} onClick={() => handleViewCategoryClick(category)}>\n                {[\n                    \"Бүтэн биеийн зөөлөн бариа\",\n                    \"Толгой, хүзүү, нурууны  бариа\",\n                    \"Сээр бүсэлхий, ууц нурууны бариа\",\n                    \"4 мөч (түнх,гуя, өвдөг,шилбэ,тавхай( (мөр, бугалга, шуу, тохой, сарвуу\",\n                    ]\n                    [idx]}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {viewCategory && (\n          <div className=\"comments-container\">\n            <h4 className=\"category-title\">\n              {categoryMapping[viewCategory.name]} - Тэмдэглэгээ\n            </h4>\n\n            {/* Comments Section */}\n            <div className=\"comments\">\n              {comments.length > 0 ? (\n                comments.map((comment, idx) => (\n                  <div key={idx} className=\"comment-item\">\n                    <strong className=\"comment-author\">{comment.addedBy}</strong>\n                    <p className=\"comment-text\">{comment.text}</p>\n                    <span className=\"comment-time\">\n                      {new Date(comment.timestamp).toLocaleString()}\n                    </span>\n                  </div>\n                ))\n              ) : (\n                <p className=\"no-comments\">Одоогоор сэтгэгдэл алга байна.</p>\n              )}\n            </div>\n\n            {/* New Comment Form */}\n            <div className=\"new-comment-form\">\n              <textarea\n                className=\"comment-input\"\n                placeholder=\"Сэтгэгдэл бичих...\"\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n              ></textarea>\n              <button\n                className=\"back-button\"\n                onClick={() => setViewCategory(null)}\n              >\n                Буцах\n              </button>\n              <div className=\"buttons\">\n                <button className=\"add-comment-button\" onClick={handleAddComment}>\n                  Сэтгэгдэл нэмэх\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    )}\n\n{viewOption === \"add-option3\" && (\n      <div className=\"view-popup\">\n        {!viewCategory && (\n          <div>\n            <h4>Ангилалаа сонгоно уу!</h4>\n            {categories_usan.map((category, idx) => (\n              <button key={idx} onClick={() => handleViewCategoryClick(category)}>\n                {[\n                    \"Жакуз ванн\",\n                    \"4 мөчний ванн\",\n                    \"Церкуляр душ\",\n                ]\n                    [idx]}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {viewCategory && (\n          <div className=\"comments-container\">\n            <h4 className=\"category-title\">\n              {categoryMapping[viewCategory.name]} - Тэмдэглэгээ\n            </h4>\n\n            {/* Comments Section */}\n            <div className=\"comments\">\n              {comments.length > 0 ? (\n                comments.map((comment, idx) => (\n                  <div key={idx} className=\"comment-item\">\n                    <strong className=\"comment-author\">{comment.addedBy}</strong>\n                    <p className=\"comment-text\">{comment.text}</p>\n                    <span className=\"comment-time\">\n                      {new Date(comment.timestamp).toLocaleString()}\n                    </span>\n                  </div>\n                ))\n              ) : (\n                <p className=\"no-comments\">Одоогоор сэтгэгдэл алга байна.</p>\n              )}\n            </div>\n\n            {/* New Comment Form */}\n            <div className=\"new-comment-form\">\n              <textarea\n                className=\"comment-input\"\n                placeholder=\"Сэтгэгдэл бичих...\"\n                value={newComment}\n                onChange={(e) => setNewComment(e.target.value)}\n              ></textarea>\n              <button\n                className=\"back-button\"\n                onClick={() => setViewCategory(null)}\n              >\n                Буцах\n              </button>\n              <div className=\"buttons\">\n                <button className=\"add-comment-button\" onClick={handleAddComment}>\n                  Сэтгэгдэл нэмэх\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    )}\n\n\n\n    {/* Important Notes View */}\n    {viewOption === \"important\" && userRole !== \"preview\" && (\n      <div className=\"important-notes\">\n        <h4 className=\"important-title\">Анхаарах ёстой зүйлс</h4>\n\n        {/* Date Filter Already Applied */}\n        <div className=\"notes-list\">\n          {importantNotes.length > 0 ? (\n            importantNotes.map((note, idx) => (\n              <div key={idx} className=\"note-item\">\n                <strong className=\"note-author\">{note.addedBy}</strong>\n                <p className=\"note-text\">{note.text}</p>\n                <span className=\"note-time\">\n                  {new Date(note.timestamp).toLocaleString()}\n                </span>\n              </div>\n            ))\n          ) : (\n            <p className=\"no-notes\">Одоогоор анхаарах зүйлс алга байна.</p>\n          )}\n        </div>\n\n        {/* New Note Input */}\n        <div className=\"new-note-form\">\n          <textarea\n            className=\"note-input\"\n            placeholder=\"Анхаарах зүйл бичих...\"\n            value={newImportantNote}\n            onChange={(e) => setNewImportantNote(e.target.value)}\n          ></textarea>\n          <div className=\"buttons\">\n            <button className=\"add-note-button\" onClick={handleAddImportantNote}>\n              Нэмэх\n            </button>\n          </div>\n        </div>\n      </div>\n    )}\n\n    {/* Preview View */}\n    {viewOption === \"preview\" && userRole !== \"add\" && (\n      <div className=\"view-popup\">\n        {!selectedCategory && (\n          <div>\n            <h4>Ангилалаа сонгоно уу!</h4>\n            {categories.map((category, idx) => (\n              <button key={idx} onClick={() => handleCategoryClick(category)}>\n                {category.name}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {selectedCategory && (\n          <div className=\"category-preview\">\n            <h4>{selectedCategory.name}</h4>\n\n            {/* Display Options */}\n            {selectedCategory.options.map((option, idx) => (\n              <div key={idx}>\n                <label>{option}:</label>\n                <input\n                  type=\"text\"\n                  value={inputData[option] || \"\"}\n                  onChange={(e) => handleInputChange(e, option)}\n                  disabled={userRole === \"preview\"}\n                />\n              </div>\n            ))}\n\n            <div className=\"new-comment-form\">\n              <button\n                className=\"back-button\"\n                onClick={() => setSelectedCategory(null)}\n              >\n                Буцах\n              </button>\n\n              {(userRole === \"admin\" || userRole === \"add\") && (\n                <button onClick={handleSubmit} disabled={isSubmitting}>\n                  {isSubmitting ? \"Илгээж байна...\" : \"Хадгалах\"}\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    )}\n\n{viewOption === \"preview-option1\" && userRole !== \"add\" && (\n      <div className=\"view-popup\">\n        {!selectedCategory && (\n          <div>\n            <h4>Ангилалаа сонгоно уу!</h4>\n            {categories_tsahilgaan.map((category, idx) => (\n              <button key={idx} onClick={() => handleCategoryClick(category)}>\n                {category.name}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {selectedCategory && (\n          <div className=\"category-preview\">\n            <h4>{selectedCategory.name}</h4>\n\n            {/* Display Options */}\n            {selectedCategory.options.map((option, idx) => (\n              <div key={idx}>\n                <label>{option}:</label>\n                <input\n                  type=\"text\"\n                  value={inputData[option] || \"\"}\n                  onChange={(e) => handleInputChange(e, option)}\n                  disabled={userRole === \"preview\"}\n                />\n              </div>\n            ))}\n\n            <div className=\"new-comment-form\">\n              <button\n                className=\"back-button\"\n                onClick={() => setSelectedCategory(null)}\n              >\n                Буцах\n              </button>\n\n              {(userRole === \"admin\" || userRole === \"add\") && (\n                <button onClick={handleSubmit} disabled={isSubmitting}>\n                  {isSubmitting ? \"Илгээж байна...\" : \"Хадгалах\"}\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    )}\n\n{viewOption === \"preview-option2\" && userRole !== \"add\" && (\n      <div className=\"view-popup\">\n        {!selectedCategory && (\n          <div>\n            <h4>Ангилалаа сонгоно уу!</h4>\n            {categories_illeg.map((category, idx) => (\n              <button key={idx} onClick={() => handleCategoryClick(category)}>\n                {category.name}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {selectedCategory && (\n          <div className=\"category-preview\">\n            <h4>{selectedCategory.name}</h4>\n\n            {/* Display Options */}\n            {selectedCategory.options.map((option, idx) => (\n              <div key={idx}>\n                <label>{option}:</label>\n                <input\n                  type=\"text\"\n                  value={inputData[option] || \"\"}\n                  onChange={(e) => handleInputChange(e, option)}\n                  disabled={userRole === \"preview\"}\n                />\n              </div>\n            ))}\n\n            <div className=\"new-comment-form\">\n              <button\n                className=\"back-button\"\n                onClick={() => setSelectedCategory(null)}\n              >\n                Буцах\n              </button>\n\n              {(userRole === \"admin\" || userRole === \"add\") && (\n                <button onClick={handleSubmit} disabled={isSubmitting}>\n                  {isSubmitting ? \"Илгээж байна...\" : \"Хадгалах\"}\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    )}\n\n{viewOption === \"preview-option3\" && userRole !== \"add\" && (\n      <div className=\"view-popup\">\n        {!selectedCategory && (\n          <div>\n            <h4>Ангилалаа сонгоно уу!</h4>\n            {categories_usan.map((category, idx) => (\n              <button key={idx} onClick={() => handleCategoryClick(category)}>\n                {category.name}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {selectedCategory && (\n          <div className=\"category-preview\">\n            <h4>{selectedCategory.name}</h4>\n\n            {/* Display Options */}\n            {selectedCategory.options.map((option, idx) => (\n              <div key={idx}>\n                <label>{option}:</label>\n                <input\n                  type=\"text\"\n                  value={inputData[option] || \"\"}\n                  onChange={(e) => handleInputChange(e, option)}\n                  disabled={userRole === \"preview\"}\n                />\n              </div>\n            ))}\n\n            <div className=\"new-comment-form\">\n              <button\n                className=\"back-button\"\n                onClick={() => setSelectedCategory(null)}\n              >\n                Буцах\n              </button>\n\n              {(userRole === \"admin\" || userRole === \"add\") && (\n                <button onClick={handleSubmit} disabled={isSubmitting}>\n                  {isSubmitting ? \"Илгээж байна...\" : \"Хадгалах\"}\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    )}\n  </div>\n)}\n\n\n    </div>\n  );\n};\n\nexport default Room;\n","import React, { useState } from \"react\";\nimport Login from \"./components/login\";\nimport Room from \"./components/Room\";\nimport Ambulatori from \"./components/ambulatori\"; // Import Ambulatori component\nimport \"./App.css\";\n\n\nconst App = () => {\n  const [userRole, setUserRole] = useState(null);\n  const [userName, setUserName] = useState(null);\n\n  const formatDate = (date) => date.toISOString().split(\"T\")[0];\n\n  const getTodayDate = () => formatDate(new Date());\n\n  const [startDate, setStartDate] = useState(getTodayDate());\n  const [endDate, setEndDate] = useState(getTodayDate());\n  const [filterKey, setFilterKey] = useState(0);\n\n  const setToday = () => {\n    const today = getTodayDate();\n    setStartDate(today);\n    setEndDate(today);\n    applyFilter();\n  };\n\n  const setYesterday = () => {\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    const formattedDate = formatDate(yesterday);\n    setStartDate(formattedDate);\n    setEndDate(formattedDate);\n    applyFilter();\n  };\n\n  const setLastWeek = () => {\n    const today = new Date();\n    const lastWeekStart = new Date();\n    lastWeekStart.setDate(today.getDate() - 7);\n    setStartDate(formatDate(lastWeekStart));\n    setEndDate(getTodayDate());\n    applyFilter();\n  };\n\n  const applyFilter = () => {\n    setFilterKey((prevKey) => prevKey + 1);\n    console.log(`${startDate} ээс ${endDate} хооронд амжилттай филтерлэлээ`);\n  };\n\n  const logout = () => {\n    setUserRole(null);\n    setUserName(null);\n  };\n\n  if (!userRole || !userName) {\n    return <Login setUserRole={setUserRole} setUserName={setUserName} />;\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Тавтай морил, {userName}!</h1>\n\n      <button className=\"logout-button\" onClick={logout}>Гарах</button>\n\n      <div className=\"date-filter\">\n        <label>Эхлэх огноо:</label>\n        <input\n          type=\"date\"\n          value={startDate}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n        <label>Дуусах огноо:</label>\n        <input\n          type=\"date\"\n          value={endDate}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n        <button className=\"apply-filter\" onClick={applyFilter}>Филтэрлэх</button>\n\n        <div className=\"quick-filters\">\n          <button onClick={setToday}>Өнөөдөр</button>\n          <button onClick={setYesterday}>Өчигдөр</button>\n          <button onClick={setLastWeek}>Өнгөрсөн 7 хоног</button>\n        </div>\n      </div>\n\n      <div className=\"rooms\">\n        <Room\n          key={`room-ami-${filterKey}`}\n          roomName=\"Аами, Таами\"\n          startDate={startDate}\n          endDate={endDate}\n          userRole={userRole}\n        />\n        <Room\n          key={`room-tami-${filterKey}`}\n          roomName=\"Маша, Миша\"\n          startDate={startDate}\n          endDate={endDate}\n          userRole={userRole}\n        />\n        <Room\n          key={`room-pororo1-${filterKey}`}\n          roomName=\"Пороро 1\"\n          startDate={startDate}\n          endDate={endDate}\n          userRole={userRole}\n        />\n        <Room\n          key={`room-pororo2-${filterKey}`}\n          roomName=\"Пороро 2\"\n          startDate={startDate}\n          endDate={endDate}\n          userRole={userRole}\n        />\n        {/* Add the Ambulatori room */}\n        <Ambulatori\n          key={`ambulatori-${filterKey}`}\n          roomName=\"Амбулатори\"\n          startDate={startDate}\n          endDate={endDate}\n          userRole={userRole}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}